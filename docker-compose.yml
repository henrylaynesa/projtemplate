# Main docker compose file - use profiles for different environments
# Development: docker compose up
# Production: docker compose --profile prod up

services:
  db:
    image: postgres:17
    env_file:
      - ./backend/.env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: on-failure

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    ports:
      - "5000:5000"
    develop:
      watch:
        - action: sync
          path: ./backend
          target: /app
          ignore:
            - .env
            - .venv/
            - __pycache__/
        - action: rebuild
          path: ./backend/requirements.txt
    env_file:
      - ./backend/.env
    depends_on:
      - db
    volumes:
      - ./backend:/app
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    ports:
      - "3000:3000"
    restart: unless-stopped
    develop:
      watch:
        - action: sync
          path: ./frontend/src
          target: /app/src
          ignore:
            - node_modules/
        - action: sync
          path: ./frontend/public
          target: /app/public
        - action: sync
          path: ./frontend/index.html
          target: /app/index.html
        - action: sync
          path: ./frontend/vite.config.ts
          target: /app/vite.config.ts
        - action: sync
          path: ./frontend/tsconfig*.json
          target: /app/
        - action: rebuild
          path: ./frontend/package.json
        - action: rebuild
          path: ./frontend/package-lock.json
    volumes:
      - ./frontend:/app
      - /app/node_modules

  # Production services (use --profile prod to include these)
  backend-prod:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    expose:
      - "5000"
    env_file:
      - ./backend/.env
    depends_on:
      - db
    restart: unless-stopped
    profiles:
      - prod

  nginx:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: nginx
    ports:
      - "80:80"
    depends_on:
      - backend-prod
    restart: unless-stopped
    profiles:
      - prod

volumes:
  postgres_data:
